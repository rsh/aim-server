# Caddyfile configuration for Retro AIM Server
# ==================================================
# Add these TWO blocks to your main Caddyfile
#
# Instructions:
# 1. Replace 'aim.example.com' with your actual management API domain (e.g., aim.rsh.co)
# 2. Replace 'chat.example.com' with your actual chat domain (e.g., aimchat.rsh.co)
# 3. The bcrypt hash below is auto-generated - it's ready to use!
# 4. Add both blocks to your Caddy config and reload: docker exec -w /etc/caddy caddy caddy reload
#
# See PRODUCTION-INTEGRATION.md for complete deployment instructions

# Block 1: Management API - Web-based administration
aim.example.com {
    reverse_proxy retro-aim-server:8080

    # Enable compression
    encode gzip zstd

    # Restrict access to management API with basic auth
    # Admin credentials generated during setup.sh
    # TIMESTAMP_PLACEHOLDER
    # Username: admin
    # Password: See .admin-credentials file
    basicauth {
        admin YOUR_BCRYPT_HASH_HERE
    }

    # Security headers
    header {
        # Enable HSTS
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        # Prevent XSS attacks
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
        # Referrer policy
        Referrer-Policy "strict-origin-when-cross-origin"
    }
}

# ==================================================
# Client Access Points:
# ==================================================
#   Management API:  https://aim.example.com (HTTPS via Caddy with auth)
#   OSCAR:           <your-server-ip>:5190
#   TOC:             <your-server-ip>:9898
