# Example Caddyfile configuration for Retro AIM Server
# Add these blocks to your main Caddyfile
# Replace aim.example.com with your actual domain

# Management API - Web-based administration
aim.example.com {
    reverse_proxy retro-aim-server:8080

    # Enable compression
    encode gzip zstd

    # Security headers
    header {
        # Enable HSTS
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        # Prevent XSS attacks
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
        # Referrer policy
        Referrer-Policy "strict-origin-when-cross-origin"
    }

    # Optional: Restrict access to management API
    # basicauth {
    #     admin $2a$14$Zkx19XLiW6VYouLHR5NmfOFU0z2GTNmpkT/5qqR7hx4wHQWiDpZZ
    # }
}

# SSL/TLS for OSCAR and TOC protocols:
# Caddy automatically obtains and renews Let's Encrypt certificates for aim.example.com
# stunnel uses these certificates to provide SSL/TLS for the binary OSCAR/TOC protocols
# No additional configuration needed - Caddy handles certificate management!
#
# Port configuration:
#   - Port 443: Management API via Caddy (HTTPS)
#   - Port 5190: OSCAR protocol (plain, for legacy clients)
#   - Port 5193: OSCAR protocol with SSL (via stunnel, uses Caddy's cert)
#   - Port 9898: TOC protocol (plain, for legacy clients)
#   - Port 9899: TOC protocol with SSL (via stunnel, uses Caddy's cert)
